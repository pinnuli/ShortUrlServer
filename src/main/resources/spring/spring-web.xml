<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.2.xsd"
       default-lazy-init="false">
    <!-- 配置SpringMVC -->
    <!-- 开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <mvc:annotation-driven />

    <task:annotation-driven/>

    <!-- 静态资源默认servlet配置
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射
     -->
    <mvc:default-servlet-handler/>


    <!-- Start: 配置json消息转换器 & 参数解析-->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
        <property name="dateFormat">
            <bean class="java.text.SimpleDateFormat">
                <constructor-arg index="0" type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
            </bean>
        </property>
    </bean>
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json; charset=UTF-8</value>
                    </list>
                </property>
                <property name="prettyPrint" value="true"/>
                <property name="objectMapper" ref="objectMapper"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- End: 配置json消息转换器 & 参数解析 -->

    <!-- 扫描web相关的bean -->
    <context:component-scan base-package="com.cvte.controller" />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsps/" />
        <property name="suffix" value=".jsp" />
    </bean>


    <mvc:interceptors>
        <!--token校验拦截器-->
        <mvc:interceptor>
            <!-- 进行拦截：/**表示拦截所有controller -->
            <mvc:mapping path="/**" />
            <!-- 不进行拦截 -->
            <mvc:exclude-mapping path="/user/login" />
            <mvc:exclude-mapping path="/user/register" />
            <mvc:exclude-mapping path="/short_url/visit"/>
            <bean class="com.cvte.interceptor.LoginInterceptor" />
        </mvc:interceptor>

        <!--黑名单校验拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/url/short_url" />
            <bean class="com.cvte.interceptor.BlackListInterceptor" />
        </mvc:interceptor>

        <!--管理员拦截器-->
        <mvc:interceptor>
            <!-- 进行拦截：/**表示拦截所有controller -->
            <mvc:mapping path="/**" />
            <!-- 不进行拦截 -->
            <mvc:exclude-mapping path="/user/login" />
            <mvc:exclude-mapping path="/user/register" />
            <mvc:exclude-mapping path="/user/logout" />
            <mvc:exclude-mapping path="/short_url/creation"/>
            <mvc:exclude-mapping path="/short_url/visit"/>
            <mvc:exclude-mapping path="/short_url/report/creation"/>
            <mvc:exclude-mapping path="/short_url/report/visit"/>
            <mvc:exclude-mapping path="/api/detail"/>
            <mvc:exclude-mapping path="/api/outline"/>

            <bean class="com.cvte.interceptor.LoginInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 接口跨域配置 -->
    <!--<mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="*"
                     allowed-methods="POST, GET, OPTIONS, DELETE, PUT"
                     allowed-headers="Content-Type, Access-Control-Allow-Headers, Token, X-Requested-With, Authorization"
                     allow-credentials="true" />
    </mvc:cors>-->

    <!--&lt;!&ndash; rocketmq配置 &ndash;&gt;
    <context:property-placeholder location="classpath:rocketmq.properties" />
    <bean id="rocketmqConsumer" class="org.apache.rocketmq.client.consumer.DefaultMQPushConsumer" init-method="start" destroy-method="shutdown">
        <property name="consumerGroup" value="${rocketmq.consumerGroup}" />
        <property name="namesrvAddr" value="${rocketmq.namesrvAddr}" />
        <property name="messageListener" ref="messageListeners" />
        <property name="subscription">
            <map>
                <entry key="${rocketmq.topic}" value="${rocketmq.tags}" />
            </map>
        </property>
    </bean>


    <bean id="rocketMQProducer" class="com.th.producer.RocketMQProducer" init-method="init" destroy-method="destroy">
        <property name="producerGroup" value="${rocketmq.producer.group}" />
        <property name="namesrvAddr" value="${rocketmq.namesrvAddr}" />
        &lt;!&ndash; 失败重试次数 <property name="retryTimes" value="${rocketmq.producer.retryTimes}" /> &ndash;&gt;
    </bean>-->
</beans>